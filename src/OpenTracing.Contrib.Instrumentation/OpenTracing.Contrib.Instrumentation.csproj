<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net461</TargetFrameworks>
    <Description>Adds OpenTracing instrumentation for .NET Core apps that use the `Microsoft.Extensions.*` stack.
Instrumented components: HttpClient calls, ASP.NET Core, Entity Framework Core and any other library that uses DiagnosticSource events.</Description>
    <PackageTags>opentracing;distributed-tracing;tracing;netcore</PackageTags>

    <!-- When compiling .NET SDK 2.0 projects targeting .NET 4.x on Mono using 'dotnet build' you -->
    <!-- have to teach MSBuild where the Mono copy of the reference asssemblies is -->
    <TargetIsMono Condition="$(TargetFramework.StartsWith('net4')) and '$(OS)' == 'Unix'">true</TargetIsMono>

    <!-- Look in the standard install locations -->
    <BaseFrameworkPathOverrideForMono Condition="'$(BaseFrameworkPathOverrideForMono)' == '' AND '$(TargetIsMono)' == 'true' AND EXISTS('/Library/Frameworks/Mono.framework/Versions/Current/lib/mono')">/Library/Frameworks/Mono.framework/Versions/Current/lib/mono</BaseFrameworkPathOverrideForMono>
    <BaseFrameworkPathOverrideForMono Condition="'$(BaseFrameworkPathOverrideForMono)' == '' AND '$(TargetIsMono)' == 'true' AND EXISTS('/usr/lib/mono')">/usr/lib/mono</BaseFrameworkPathOverrideForMono>
    <BaseFrameworkPathOverrideForMono Condition="'$(BaseFrameworkPathOverrideForMono)' == '' AND '$(TargetIsMono)' == 'true' AND EXISTS('/usr/local/lib/mono')">/usr/local/lib/mono</BaseFrameworkPathOverrideForMono>

    <!-- If we found Mono reference assemblies, then use them -->
    <FrameworkPathOverride Condition="'$(BaseFrameworkPathOverrideForMono)' != '' AND '$(TargetFramework)' == 'net461'">$(BaseFrameworkPathOverrideForMono)/4.6.1-api</FrameworkPathOverride>

    <EnableFrameworkPathOverride Condition="'$(BaseFrameworkPathOverrideForMono)' != ''">true</EnableFrameworkPathOverride>

    <!-- Add the Facades directory.  Not sure how else to do this. Necessary at least for .NET 4.5 -->
    <AssemblySearchPaths Condition="'$(BaseFrameworkPathOverrideForMono)' != ''">$(FrameworkPathOverride)/Facades;$(AssemblySearchPaths)</AssemblySearchPaths>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Configuration\IOpenTracingBuilder.cs" Link="Contracts\IOpenTracingBuilder.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Configuration\OpenTracingBuilder.cs" Link="Configuration\OpenTracingBuilder.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Configuration\ServiceCollectionExtensions.cs" Link="Configuration\ServiceCollectionExtensions.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Internal\DiagnosticListenerObserver.cs" Link="Diagnostic\DiagnosticListenerObserver.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Internal\DiagnosticManager.cs" Link="Diagnostic\DiagnosticManager.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Internal\DiagnosticManagerOptions.cs" Link="Diagnostic\DiagnosticManagerOptions.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Internal\DiagnosticObserver.cs" Link="Diagnostic\DiagnosticObserver.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Internal\GenericEventProcessor.cs" Link="Diagnostic\GenericEventProcessor.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Internal\GlobalTracerAccessor.cs" Link="Utils\GlobalTracerAccessor.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Internal\PropertyFetcher.cs" Link="Utils\PropertyFetcher.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Internal\IGlobalTracerAccessor.cs" Link="Contracts\IGlobalTracerAccessor.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Internal\SpanExtensions.cs" Link="Extensions\SpanExtensions.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Internal\TracerExtensions.cs" Link="Extensions\TracerExtensions.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Logging\OpenTracingLogger.cs" Link="Logging\OpenTracingLogger.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\Logging\OpenTracingLoggerProvider.cs" Link="Logging\OpenTracingLoggerProvider.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\CoreFx\GenericDiagnosticOptions.cs" Link="Bcl\GenericDiagnosticOptions.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\CoreFx\GenericDiagnostics.cs" Link="Bcl\GenericDiagnostics.cs" />
    <Compile Include="..\csharp-netcore\src\OpenTracing.Contrib.NetCore\InstrumentationService.cs" />
  </ItemGroup>

  <ItemGroup>
    <!-- Main dependencies -->
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="2.0.0" />
    <PackageReference Include="Microsoft.Extensions.Hosting.Abstractions" Version="2.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="2.0.0" />
    <PackageReference Include="OpenTracing" Version="0.12.0" />
    <PackageReference Include="System.Diagnostics.DiagnosticSource" Version="4.5.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- When using 'dotnet build' to compile against Mono reference assemblies it seems necessary to add some explicit references to some facade DLLs  -->
    <Reference Include="System.Runtime" Condition="'$(BaseFrameworkPathOverrideForMono)' != '' AND $(TargetFramework.StartsWith('net4'))" />
    <Reference Include="System.IO" Condition="'$(BaseFrameworkPathOverrideForMono)' != '' AND $(TargetFramework.StartsWith('net4'))" />
    <Reference Include="System.Net.Primitives" Condition="'$(BaseFrameworkPathOverrideForMono)' != '' AND $(TargetFramework.StartsWith('net4'))" />
    <Reference Include="System.Threading.Tasks" Condition="'$(BaseFrameworkPathOverrideForMono)' != '' AND $(TargetFramework.StartsWith('net4'))" />
    <Reference Include="System.Web" Condition="'$(BaseFrameworkPathOverrideForMono)' != '' AND $(TargetFramework.StartsWith('net4'))" />
  </ItemGroup>
</Project>
